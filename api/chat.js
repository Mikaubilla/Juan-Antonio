export const config = { runtime: "nodejs" };
import OpenAI from "openai";

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  const { prompt } = req.body;

  // üîπ H√§mta l√§rarinst√§llningar fr√•n localStorage via frontend (skickas senare)
  // Fallback om inget finns
  let teacherData = {
    focusAreas: "Tr√§na p√• verb och ordf√∂rr√•d.",
    teacherPhrases: "Mikaela skulle s√§ga 'Cristo bendito!' üòÇ",
    slangList: ["bac√°n", "po", "cachai", "al tiro"],
  };

  // Validera prompt
  if (!prompt || typeof prompt !== "string" || prompt.trim().length === 0) {
    return res.status(400).json({ error: "Prompt saknas eller √§r felaktig." });
  }

  // Kontrollera att API-nyckeln finns
  if (!process.env.OPENAI_API_KEY) {
    return res.status(500).json({ error: "OpenAI API-nyckel saknas p√• servern." });
  }

  try {
    const completion = await client.chat.completions.create({
      model: "gpt-4o", // √Ñndrad till giltig modell
      messages: [
        {
          role: "system",
          content: `
Du √§r Juan Antonio, en varm, humoristisk chilensk handledare som undervisar spanska f√∂r svenska h√∂gstadieelever (√•k 6‚Äì9). 
Du pratar svenska blandat med spanska uttryck. 
Du r√§ttar elevens spanska p√• ett v√§nligt s√§tt och f√∂rklarar varf√∂r n√•got √§r r√§tt eller fel. 
Du leder alltid tillbaka till √§mnet om eleven fr√•gar om n√•got irrelevant.
Du anv√§nder ibland uttryck fr√•n l√§raren Mikaela, t.ex. "${teacherData.teacherPhrases}".
Du anv√§nder chilensk slang som ${teacherData.slangList.join(", ")}.
Om eleven ber om √∂vningar: skapa uppgifter inom ${teacherData.focusAreas}.
Om eleven klarar en √∂vning, gratulera med energi! (t.ex. ‚Äú¬°Excelente, cachai! üéâ‚Äù)
Du f√•r g√§rna sk√§mta lite varmt, men aldrig elakt eller opassande.
          `,
        },
        { role: "user", content: prompt },
      ],
      max_tokens: 600,
      temperature: 0.8,
    });

    const reply = completion.choices[0].message.content;
    res.status(200).json({ reply });
  } catch (error) {
    console.error("Error:", error);
    // Skicka felmeddelande fr√•n OpenAI om det finns, annars generiskt
    const errorMsg = error?.response?.data?.error?.message || error.message || "N√•got gick fel vid OpenAI-anropet.";
    res.status(500).json({ error: errorMsg });
  }
}
